generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model roles {
  id         String    @id
  name       String    @unique
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  users      users[]
}

model users {
  id         String    @id @default(cuid())
  fullname   String?
  username   String    @unique
  password   String
  roles      roles?    @relation(fields: [role_id], references: [id])
  role_id    String    @default("USER")
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
}

model audiences {
  id         String       @id
  name       String
  images     String[]
  created_at DateTime?    @default(now())
  updated_at DateTime?    @default(now())
  categories categories[]
  products   products[]
}

model categories {
  id          String     @id @default(cuid())
  name        String     @unique
  slug        String
  description String
  images      String[]
  audiences   audiences? @relation(fields: [audience_id], references: [id])
  audience_id String     @default("UNISEX")
  created_at  DateTime?  @default(now())
  updated_at  DateTime?  @default(now())
  products    products[]
}

model tags {
  id         String     @id @default(cuid())
  name       String     @unique
  slug       String?
  images     String[]
  created_at DateTime?  @default(now())
  updated_at DateTime?  @default(now())
  products   products[]
}

model series {
  id          String     @id @default(cuid())
  name        String     @unique
  slug        String
  description String
  created_at  DateTime?  @default(now())
  updated_at  DateTime?  @default(now())
  products    products[]
}

model products {
  id          String      @id @default(cuid())
  audiences   audiences?  @relation(fields: [audience_id], references: [id])
  audience_id String?     @default("UNISEX")
  name        String      @unique
  slug        String
  description String
  specs       String
  image_urls  String[]
  categories  categories? @relation(fields: [category_id], references: [id])
  category_id String?     @default("ALL")
  series      series?     @relation(fields: [series_id], references: [id])
  series_id   String?     @default("ORIGINAL")
  tags        tags[]
  events      events[]
  created_at  DateTime?   @default(now())
  updated_at  DateTime?   @default(now())
}

model events {
  id          String     @id @default(cuid())
  name        String     @unique
  slug        String
  description String
  images      String[]
  status      Boolean    @default(false)
  begin_date  DateTime
  end_date    DateTime
  created_at  DateTime?  @default(now())
  updated_at  DateTime?  @default(now())
  products    products[]
}
